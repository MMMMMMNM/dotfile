# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'christoomey/vim-tmux-navigator'
#######################################################
set -g mouse on
#tmux
set-option -g allow-passthrough=on
set-option -g status-position top
set-option -g status-left ""
set -g status-right "%H:%M:%S"
set -g status-right-style 'fg=#d7fcaf bg=#1E1E2F'
set -g status-style "bg=#1E1E2F"
set -g status-style "fg=#4E648D"
set -g status-interval 1
set -g status-justify left
set -g visual-activity on
set -wg monitor-activity
set -g message-style "bg=#1E1E2F, fg=#89B4FB"
set -wg window-status-current-format " #I:#W#F "
set -wg window-status-current-style "fg=#d7fcaf,bg=#1E1E2F"
set -wg window-status-separator ""
#key
#reload config
bind C-r source-file ~/.config/tmux/tmux.conf \; display-message "config reload"
#set prefix key C-a
unbind C-b
set -g prefix C-a
#move pane
unbind j
unbind k
unbind l
unbind h
bind  k select-pane -U
bind  j select-pane -D
bind  l select-pane -R
bind  h select-pane -L
#split-window / and -
bind '_' split-window -h -c "#{pane_current_path}"
bind '-' split-window -v -c "#{pane_current_path}"
#move to window
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5 
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10
#kill pane
unbind q
bind-key q confirm kill-pane
#with nvim
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
